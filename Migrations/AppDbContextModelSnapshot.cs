// <auto-generated />
using Backcrazyhorse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backcrazyhorse.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Backcrazyhorse.Models.ClimbingRoute", b =>
                {
                    b.Property<int>("ClimbingRouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BoltCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Height")
                        .HasColumnType("REAL");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SectorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClimbingRouteId");

                    b.HasIndex("SectorId");

                    b.ToTable("ClimbingRoutes");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Massive", b =>
                {
                    b.Property<int>("MassiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MassiveId");

                    b.HasIndex("RegionId");

                    b.ToTable("Massives");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Sector", b =>
                {
                    b.Property<int>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MassiveId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SectorId");

                    b.HasIndex("MassiveId");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.ClimbingRoute", b =>
                {
                    b.HasOne("Backcrazyhorse.Models.Sector", "Sector")
                        .WithMany("ClimbingRoute")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Massive", b =>
                {
                    b.HasOne("Backcrazyhorse.Models.Region", "Region")
                        .WithMany("Massives")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Region", b =>
                {
                    b.HasOne("Backcrazyhorse.Models.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Sector", b =>
                {
                    b.HasOne("Backcrazyhorse.Models.Massive", "Massive")
                        .WithMany("Sectors")
                        .HasForeignKey("MassiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Massive");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Massive", b =>
                {
                    b.Navigation("Sectors");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Region", b =>
                {
                    b.Navigation("Massives");
                });

            modelBuilder.Entity("Backcrazyhorse.Models.Sector", b =>
                {
                    b.Navigation("ClimbingRoute");
                });
#pragma warning restore 612, 618
        }
    }
}
